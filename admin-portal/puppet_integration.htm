<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin_SnowDocs" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="Admin Portal|[%=System.LinkedTitle%]" data-mc-conditions="General.NotForSPBuildHelp" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" /><title>Integrate Puppet with Commander</title>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <meta charset="utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Styles.css" rel="stylesheet" type="text/css" />
        <link href="../Resources/fontAwesome/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
        <link href="../Resources/Stylesheets/roboto.font.css" rel="stylesheet" type="text/css" />
        <style>*
{
	box-sizing: border-box;
}

/* Create two columns that float next to each other */

.column
{
	
}

.column2
{
	
}

/* Clear floats after the columns */

.row:after
{
	content: "";
	display: table;
	clear: both;
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <link href="../Resources/TableStyles/AccessAndAvailability.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="https://www.googletagmanager.com/gtag/js?id=G-L05Y74KND5" async="async">
        </script>
        <script>/*<![CDATA[*/  window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

		gtag('config', 'G-L05Y74KND5');/*]]>*/</script>
        <script defer="defer" src="../Resources/Scripts/scroll_to_top_left_nav.js" type="text/javascript">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" aria-label="title tab bar" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 900px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://docs.snowsoftware.io" title="Docs Portal Home" alt="Docs Portal Home"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="All Commander Docs" title="All Commander Docs" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Commander Docs</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div style="width: 100%; overflow: hidden;">
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_SnowDocs_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="3" data-mc-toc="True">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="column"> <div role="main" id="mc-main-content"><h1 id="IntegratePuppetwithCommander" data-magellan-target="IntegratePuppetwithCommander"><a name="aanchor214"></a><MadCap:concept term="Admin Portal" />Integrate Puppet with Commander</h1><p>You can integrate  Puppet's automation software with Commander to automate repetitive configuration tasks for provisioning VMs. Requested VMs can be automatically deployed and configured as Puppet nodes. You can create workflows that specify the configuration for a node in the Puppet master. You can also set up automatic VM decommissioning driven by expiry date or a change request process, including removal of the node configuration from the Puppet master.</p><p>If you have integrated with the Puppet Labs® IT automation system, a Puppet tab appears in the Infrastructure and Applications views for any VMs identified as Puppet nodes. This tab displays environment, group, class, and variable information.</p><p>If the tab contains no information, or if you want to retrieve new information, click Refresh Puppet Information. </p><h2 id="HowCommanderworkswithPuppet" data-magellan-target="HowCommanderworkswithPuppet"><a name="how_it_works"></a>How Commander works with Puppet</h2><p>Commander integrates with Puppet using Puppet's REST API.</p><p>Commander communicates only with the Puppet master. It doesn't communicate directly with Puppet agents, nor does it apply Puppet configuration to agents. You can use a Commander completion workflow to apply the configuration to the provisioned Puppet node immediately. Or, your completion workflow can configure the Puppet master, and leave the configuration of the newly provisioned VM to the Puppet infrastructure.</p><p>Commander uses variable substitution to identify Puppet nodes in your infrastructure. For example, if your Puppet node name format is <code>&lt;dns_name&gt;.pv.example.com</code>, when you integrate with Puppet, you use <code>#{target.dnsName}.pv.example.com</code> to tell Commander how to identify nodes. Commander communicates with the Puppet master to obtain a list of registered node names and then compares them with VM names in your infrastructure. When Commander finds a match, it marks the VM as a Puppet node.</p><p>Assign classes to nodes indirectly by assigning groups to nodes, rather than directly assigning classes to nodes. If you use the Configure Puppet workflow step to assign classes and variables to a node, Commander creates a group with the same name as the node and pins the node to the group. A parent group named "vCommander" is also created to contain these groups.</p><p>Integrating Commander with Puppet allows you to:</p><ul><li>set the Puppet configuration in the Commander service catalog
            </li><li>optionally, present Puppet configuration choices to end users when requesting new services
            </li><li>configure Puppet-specific workflow steps for common functions such as authorizing nodes and supplying the environment, groups and variables for node configuration
            </li><li>access VM configuration, metadata and request form data when configuring a node in the Puppet master            </li><li>identify Puppet nodes and view their configuration in Commander and the Service Portal           </li><li>synchronize with the Puppet server on a configurable schedule
          
                </li></ul><p class="Note">Commander doesn't display Puppet class parameters.</p><h3>Authentication with the Puppet server</h3><p>When Commander executes commands on the Puppet Master through SSH, Commander uses sudo if the user name of the credentials used to add the Puppet server isn't "root". Commander supports interactive sudo prompts.</p><h3>Version of Puppet supported</h3><p> For information on the lasted supported Puppet Enterprise version, see <a href="../installation/system-requirements.htm#3rd_party" class="MCXref xref">Third-party integrations</a>. Commander also works with  Puppet Open Source 4.2 or higher. If you have the Open Source edition, you must install and configure the Puppet Console on your Puppet Master so that Commander can communicate with it.</p><h2 id="Overviewoftasks" data-magellan-target="Overviewoftasks">Overview of tasks</h2><p>The tasks involved in integrating with Puppet are:</p><ol><li value="1"><a href="#enable_node_check_in" class="hreflinks">Enable the node check-in storage parameter</a></li><li value="2"><a href="#gen_cert" class="hreflinks">Generate a certificate for the Commander server</a></li><li value="3"><a href="#creds" class="hreflinks">Create credentials</a></li><li value="4"><a href="#server_integration" class="hreflinks">Add the Puppet server to Commander</a></li><li value="5"><a href="#catalog_defaults" class="hreflinks">Configure Puppet information for service catalog components</a></li><li value="6"><a href="#form" class="hreflinks">Optional: Allow users to specify Puppet groups on the request form</a></li><li value="7"><a href="#completion_workflow" class="hreflinks">Edit the example completion workflow for new requests</a></li><li value="8"><a href="#decom_wf" class="hreflinks">Set up a decommissioning workflow for Puppet nodes</a></li><li value="9"><a href="#sync_task" class="hreflinks">Optional: Adjust the schedule for Puppet synchronization</a></li></ol><h2 id="Enablethenodecheckinstorageparameter" data-magellan-target="Enablethenodecheckinstorageparameter"><a name="enable_node_check_in"></a>Enable the node check-in storage parameter</h2><p>The node check-in storage parameter is disabled by default to help reduce loads in more complex environments. Before using the check-in history endpoint, you must enable node check-in storage.</p><p>To enable node check-in storage:</p><p>In the puppet_enterprise::profile::console class, set the <code>classifier_node_check_in_storage</code> parameter to <code>true</code> for the master server.</p><h2 id="GenerateacertificatefortheCommanderserver" data-magellan-target="GenerateacertificatefortheCommanderserver"><a name="gen_cert"></a>Generate a certificate for the Commander server</h2><p>To allow Commander to communicate with Puppet, you must generate a certificate for the Commander server.</p><p>For more information on how Commander communicates with Puppet, see <a href="https://puppet.com/docs/pe/2019.8/forming_node_classifier_requests.html" target="_blank">Forming Node Classifier Requests <span class="f_Icons_Inline"></span></a> in the Puppet documentation.</p><p class="Note">By default, configuration data is stored at <code>/etc/puppetlabs</code> on the Puppet server. If your configuration data is stored elsewhere, adjust the file paths in this procedure.</p><ol><li value="1">Open an SSH connection to the Puppet server.</li><li value="2">Generate a certificate for the Commander server with the following command:
           
                <p class="code">puppet cert --generate &lt;Commander hostname&gt;</p></li><li value="3">To add the Commander server to the whitelist, add a new line containing the Commander host name to the following file:
            
                <p class="code">/etc/puppetlabs/console-services/rbac-certificate-whitelist</p></li><li value="4">Restart the Puppet service pe-console-services for the whitelist change to take effect:
           
                <p class="code">sudo service pe-console-services restart</p></li><li value="5">Make a copy of the following files, which you need when integrating Puppet with Commander:
           
            <ul><li>Puppet's CA certificate:
                <br /><code>/etc/puppetlabs/puppet/ssl/certs/ca.pem</code></li><li>The Commander you just generated: 
                <br /><code>/etc/puppetlabs/puppet/ssl/certs/&lt;Commander_hostname&gt;.pem </code></li><li>The Commander private key you just generated: 
                <br /><code>/etc/puppetlabs/puppet/ssl/private_keys/&lt;Commander_hostname&gt;.pem</code></li></ul></li></ol><h2 id="Createcredentials" data-magellan-target="Createcredentials"><a name="creds"></a>Create credentials</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Credentials</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>You need to create four sets of credentials in the System category:</p><ul><li>credentials for an account that Commander can use to open an SSH connection to the Puppet server</li><li>credentials to store the Puppet CA certificate</li><li>credentials to store the Commander certificate you created above</li><li>credentials to store the Commander private key you created above</li></ul><h3><a name="creds_puppet"></a>Create credentials for Commander to SSH to the Puppet server</h3><ol><li value="1">On the Credentials page, click <b>Add</b>.</li><li value="2">Leave the default credential type, <b>Username/Password</b>.</li><li value="3">Enter the user name and password for an account that Commander can use to open an SSH connection to the Puppet server.</li><li value="4">For the description, enter "Puppet", to serve as a memory aid to administrators when configuring tasks requiring credentials.</li><li value="5">From <b>Category</b>, select <b>System Credentials</b>.</li><li value="6">Click <b>OK</b>.</li></ol><h3><a name="creds_ca_cert"></a>Create credentials to store the Puppet CA certificate</h3><ol><li value="1">On the Credentials page, click <b>Add</b>.</li><li value="2">In the Add Credentials dialog, from <b>Credential Type</b>, select <b>RSA Key</b>.</li><li value="3">In the <b>Username</b> field, enter a descriptive label for this certificate (for example, "Puppet CA Certificate").</li><li value="4">In the <b>RSA Key field</b>, paste the entire contents of the file you copied from <span style="word-wrap:anywhere;"><code>/etc/puppetlabs/puppet/ssl/certs/ca.pem</code></span>.</li><li value="5">Optionally, enter a description.</li><li value="6">From <b>Category</b>, select <b>System Credentials</b>.</li><li value="7">Click <b>OK</b>.</li></ol><h3><a name="creds_vcmdr_cert"></a>Create credentials to store the Commander certificate</h3><ol><li value="1">On the Credentials page, click <b>Add</b>.</li><li value="2">For <b>Credential Type</b>, select <b>RSA Key</b>.</li><li value="3">In the <b>Username</b> field, enter a descriptive label for this certificate (for example, "Commander Certificate").</li><li value="4">In the RSA Key field, paste the entire contents of the file you copied from <span style="word-wrap:anywhere;"><code>/etc/puppetlabs/puppet/ssl/certs/&lt;Commander_hostname&gt;.pem</code></span> and optionally enter a description.</li><li value="5">For <b>Category</b>, select <b>System Credentials</b>.</li><li value="6">Click <b>OK</b>.</li></ol><h3><a name="creds_vcmdr_key"></a>Create credentials to store the Commander private key</h3><ol><li value="1">On the Credentials page, click <b>Add</b>.</li><li value="2">For <b>Credential Type</b>, select <b>RSA Key</b>.</li><li value="3">In the <b>Username</b> field, enter a descriptive label for this certificate (for example, "Commander Private Key").</li><li value="4">In the <b>RSA Key</b> field, paste the entire contents of the file you copied from <span style="word-wrap:anywhere;"><code>/etc/puppetlabs/puppet/ssl/private_keys/&lt;Commander_hostname&gt;.pem</code></span>.</li><li value="5">Optionally enter a description.</li><li value="6">For <b>Category</b>, select <b>System Credentials</b>.</li><li value="7">Click <b>OK</b>.</li></ol><h2 id="AddthePuppetservertoCommander" data-magellan-target="AddthePuppetservertoCommander"><a name="server_integration"></a>Add the Puppet server to Commander</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; System</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser</p></td></tr></table><p>To add a Puppet server:</p><ol><li value="1">Click the <b>Integration</b> tab.</li><li value="2">On the Integration page, click <b>Add &gt; Puppet Server</b>.</li><li value="3">In the Puppet Server dialog, in the <b>SSH Host/IP</b> field, enter the host name or IP address and port number for the Puppet server. The default port is 22.<p>All commands are executed by opening an SSH connection on the Puppet master, executing the command, gathering the output and terminating the connection.</p></li><li value="4">From <b>SSH Credentials</b>, select the Puppet credentials you created <a href="#creds_puppet" class="hreflinks">above</a>.</li><li value="5">The <b>Puppet API Host/IP</b> field is auto-populated with what you entered for the SSH Host/IP field. Edit this value if required.</li><li value="6">From <b>Puppet CA Certificate</b>, select the Puppet CA certificate credentials you created <a href="#creds_ca_cert" class="hreflinks">above</a>.</li><li value="7">From <b>Commander Certificate</b>, select the Commander certificate credentials you created <a href="#creds_vcmdr_cert" class="hreflinks">above</a>.</li><li value="8">From <b>Commander Private Key</b>, select the Commander private key credentials you created <a href="#creds_vcmdr_key" class="hreflinks">above</a>.</li><li value="9"><a name="node_name"></a>The <b>Node Name</b> field allows Commander to match any VMs currently managed by Commander to nodes registered with the Puppet master. The field is prepopulated with the variable <code>#{target.dnsName}</code>, which returns the DNS name of the VM. If you have a different naming convention for Puppet nodes, enter it.
                <p class="tip">In any text field that supports variables, click <span class="f_Icons_Inline"></span> to open the script editor and select variables for the current context.</p></li><li value="10">Click <b>Test</b> to test the connection.
                <p>Commander tries to establish an SSH connection to the specified server and look up the default group on the node classifier. This test doesn't verify the Node Name.</p></li><li value="11">Once you see a Success message, click <b>OK</b> to save the configuration.</li></ol><p> Commander then creates and runs the Puppet Synchronization task. This task retrieves the currently configured node groups and node classes from the Puppet server. It also matches any VMs currently managed by Commander to nodes registered with the Puppet master.</p><p>You can double-click the Puppet Synchronization task in the Tasks tab at the bottom of the Commander console to view the associated events. Or, go to the Events tab. The following image shows that Commander found Puppet classes, groups, and environments.</p><div><img alt="Puppet Synchronization" title="Puppet Synchronization" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-synch-events.png" /></div><p>This task is scheduled to run nightly. See <a href="#sync_task" class="hreflinks">Synchronizing with Puppet and Adjusting the Synchronization Schedule</a> below for more information.</p><h2 id="ConfigurePuppetinformationforservicecatalogcomponents" data-magellan-target="ConfigurePuppetinformationforservicecatalogcomponents"><a name="catalog_defaults"></a>Configure Puppet information for service catalog components</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Roles of Superuser and Enterprise Admin</p></td></tr></table><p>You can predefine the Puppet environment as well as Puppet classes and groups in the service catalog. You can then use variables to pass these values to a completion workflow that instructs the Puppet master to apply the configuration to requested VMs (as explained later in this topic).</p><p>Assign classes to nodes indirectly by assigning groups to nodes, rather than directly assigning classes to nodes. If you use the Configure Puppet workflow step to assign classes and variables to a node, Commander creates a group with the same name as the node and pins the node to the group. A parent group named "vCommander" is also created to contain these groups.</p><p class="Note">If you have upgraded from vCommander version 5.2 or earlier, predefining Puppet classes and groups in the service catalog requires you to use the <a href="make_service_available.htm#upgrade" class="hreflinks">Blueprint catalog model</a>.</p><p>If you want to allow users to specify Puppet groups on the request form (as shown in the next section), the values you select appear as default values on the form.</p><p>To configure Puppet information for service catalog components:</p><ol><li value="1">Click the <b>Catalog</b> tab.</li><li value="2">Locate the service in the list and click <b>Edit</b>.</li><li value="3">Go to the component's page in the wizard. If you have <a href="#server_integration" class="hreflinks">integrated with Puppet</a>, you should see Puppet tab.</li><li value="4">Click the component's <b>Puppet</b> tab. All environments, classes and groups retrieved from the Puppet server are displayed. 
                <p><img alt="Puppet tab" title="Puppet tab" style="height: auto;max-width: 99%;" src="Images/puppet-catalog-tab.png" /></p></li><li value="5">Select an environment from those listed. The default environment is production.
                <p class="Note">If the production environment doesn't exist and you don't select another environment, class and group selections will have no effect.</p><p>Once you select an environment, only those classes and groups found in that environment are available for selection.</p></li><li value="6">As required, select one or more classes and groups from the pick lists. Ctrl-click to select multiple classes and groups. If you don't select classes or groups, no default values are applied.

                <p>Assign classes to nodes indirectly by assigning groups to nodes, rather than directly assigning classes to nodes.</p></li><li value="7">If you want to allow users to select Puppet groups when requesting this service, continue to the next section. Otherwise, click <b>Finish</b>.</li></ol><h2 id="OptionalAllowuserstospecifyPuppetgroupsontherequestform" data-magellan-target="OptionalAllowuserstospecifyPuppetgroupsontherequestform"><a name="form"></a>Optional: Allow users to specify Puppet groups on the request form</h2><p>If you want to allow users to specify Puppet groups when requesting a new service, edit the service catalog entry. In this example, you want users to specify Puppet groups for new VMs. You can then use the groups selected on the form as input to a VM completion workflow or command workflow (which you'll create next).</p><p>If you want to customize the list of groups on the form, instead of using the Puppet Groups form elements, you can create a list-type custom attribute for use on the form instead. You can also use a list-type custom attribute to allow users to select an environment on the form, but this only makes sense if groups are the same across all environments. For more information, see <a href="working-with-custom-attributes.htm" class="MCXref xref">Work with Custom Attributes</a>.</p><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Roles of Superuser and Enterprise Admin</p></td></tr></table><p>   Allow users to select Puppet groups, rather than individual classes.</p><p>To allow users to specify Puppet groups on the request form:</p><ol><li value="1">Click the <b>Catalog</b> tab.</li><li value="2">Continuing from the previous procedure, in the <b>Service Catalog</b> entry, click the <b>Form </b> tab.</li><li value="3">In the Toolbox at the right side of the page, under <b>Puppet</b>, click the <b>Puppet  Groups</b> form element.
                </li><li value="4">In the newly added component, optionally enter a custom display label for the form element.</li><li value="5">From the <b>Selectable Values</b> list, Ctrl-click all values you want to allow users to select.</li><li value="6">If you want the values users select to be merged with the defaults you specified, clear <b>Override Default Values</b>. If you want users to be able to override the defaults you selected on the Puppet tab, enable <b>Override Default Values</b>.</li><ul><li>If you want users requesting a service to be able to override the defaults you specify, enable <b>Override Default Values</b>.</li><li>If you don't want users requesting a service to be able to override the defaults you specify, clear <b>Override Default</b>.</li></ul><li value="7">To force users to select one or more values, enable <b>Required</b>.
                <p class="Note">When this element is required, a user must select at least one value, even if you have already configured default values.</p></li><li value="8">To allow users to select multiple values, enable <b>Select Multiple</b>.</li><li value="9">Click <b>OK</b> and <b>Save</b>.</li><li value="10">To test your form, go to <b>Configuration &gt; Self-Service &gt; Forms</b>. Select the <b>Default Service</b> form in the list and click <b>Preview</b>. In the list of services, select the service you configured for Puppet.</li></ol><h2 id="Edittheexamplecompletionworkflowfornewrequests" data-magellan-target="Edittheexamplecompletionworkflowfornewrequests"><a name="completion_workflow"></a>Edit the example completion workflow for new requests</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>Commander includes three example Puppet workflows.</p><p>If you use rules to set node groups, or if you use Hiera, customize the Puppet for Linux Basic Example workflow. This workflow installs the Puppet agent and authorizes the node.</p><p>If you want to preassign the environment, groups, or classes to the new node for the first communication between the Puppet master and the agent, customize the Puppet for Linux Advanced Example workflow as shown in this section. This workflow creates the Puppet node, installs and configures the Puppet agent on the VM, and configures the Puppet master.</p><p>To use any of the example workflows, you must add Guest OS credentials. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance. Once you've customized a completion workflow, you can copy it and make modifications for other operating systems.</p><p>Prerequisite: Ensure that the VM's networking and host name are properly configured, either through a customization spec or through workflow steps. For more information, including guidance on credentials, see <a href="config_network_wf_step.htm" class="hreflinks MCXref xref xrefhreflinks">Configure OS Networking Through Workflow Steps</a>.</p><ul class="NoteMultiple"><li>For Windows VMs, it may take longer than the default 300 seconds (five minutes) to obtain an IP address and DNS name. You may want to use two steps: one that waits for guest OS customization to complete, and one that waits for IP address and DNS name.</li><li>The Authorize Node action of the Configure Puppet step authorizes communication between the Puppet master and the Puppet node. This action isn't required if the Puppet master is configured to authorize all new nodes, because the master will authorize communication as soon as the agent connects to it.</li></ul><h3>For Linux</h3><p>Before you begin, make sure that the autosign setting in puppet.conf is enabled.</p><p>To customize the Puppet for Linux Advanced Example workflow:</p><ol><li value="1">Click the <b>Completion</b> tab.</li><li value="2">On the Completion page, select the completion workflow and click <b>Edit</b>.</li><li value="3">On the Name page, customize the name if you want.
</li><li value="4">On the Steps page, the steps are preconfigured. If you select a step, its configuration parameters are displayed in the Details area to the right.</li><li value="5">The starting Wait for VM to Be Ready step waits for the service to obtain an IP address and DNS name.

                <p>(A similar step would be set through <b>Add &gt; Guest OS &gt; Copy File</b>.)</p></li><li value="6">The Install Puppet Client step installs the Puppet agent on the new VM. Note that if the agent has already been installed on the source template, the template just needs to be configured to use the new node name.
                <p>(A similar step would be set through  <b>Add &gt; Guest OS &gt; Run Program</b>.)</p><ul><li><b>Credentials</b>: Select the appropriate credentials or click <b>Add Credentials</b>. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line</b>: Enter the following:
                <p class="code">curl -k https://#{integrations.puppet.address}:8140/packages/current/install.bash | bash</p><p><img alt="Install Puppet Client step" title="Install Puppet Client step" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-step-5.png"></img></p></li></ul></li><li value="7">The Copy puppet.conf step configures the Puppet agent.<p>(A similar step would be set through <b>Add &gt; Wait for Event</b>).</p><p>When you integrate a Puppet server, an example configuration file is saved to:
        </p><p><code>#{system.directory}\public\puppet.conf</code></p><p>where <code>#{system.directory}</code> is the location of the Tomcat directory in your Commander installation.</p><p>You can customize this configuration file. The default file looks similar to the following:
        </p><p class="code">[main]</p><p class="code">&#160;logdir = /var/log/puppet</p><p class="code">&#160;rundir = /var/run/puppet</p><p class="code">&#160;server = pe.example.com</p><p class="code">[agent]</p><p class="code">&#160;report = true</p><p class="code">&#160;classfile = $vardir/classes.txt</p><p class="code">&#160;localconfig = $vardir/localconfig</p><p class="code">&#160;pluginsync = true</p><p>The server line in the configuration file references the Puppet master server.</p><p>Do the following in the details pane:
        </p><ul><li><b>Credentials</b>: Select the appropriate credentials from the list or click Add Credentials. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Destination</b>: Customize the path to the Puppet agent installation on the target VM, if necessary.<p><img alt="Copy File to Guest step" title="Copy File to Guest step" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-step-6.png"></img></p></li></ul></li><li value="8">The Start Puppet Agent step comes next:<p>(A similar step would be set through <b>Add &gt; Guest OS &gt; Run Program</b>.)</p><ul><li><b>Credentials</b>: Select credentials from the menu. The Configure Puppet step uses the credentials you <a href="#creds" class="hreflinks">created</a> for communications with the Puppet server. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line</b>: Customize the following entry, if necessary: <code>service puppet start</code> <p><img alt="Start Puppet Agent dialog" title="Start Puppet Agent dialog" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-start-agent.png"></img></p></li></ul></li><li value="9">Next comes two instances of the Configure Puppet step. They are Set Environment and Set Groups.<p>(Similar steps would be set through <b>Add &gt; Guest OS &gt; Configure Puppet</b>.)</p><ul><li>The Set Environment step sets an environment in the Puppet master for this VM.</li><li>The Node field is prepopulated with the value entered for Node Name during integration with Puppet.<p>You can enter either comma-separated values or Commander variables for the environment. Since you specified default values for Puppet Environment in the service catalog entry, you can retrieve this information with the following variables: 
        </p><p class="code">#{target.settings.puppet.environment}</p><p><img alt="Puppet Set Environment step" title="Puppet Set Environment step" style="height: auto;max-width: 99%;" src="Images/puppet-comp-wf-set-env2.png" /></p></li><li>The Set Groups step sets the node groups this node belongs to.
          
                        <p>You can enter either comma-separated values or Commander variables for groups. Since you specified default values for Puppet Group in the service catalog entry and you added Puppet Groups to the request form, you can retrieve this information with the following variables:
        </p><p class="code">#{target.settings.puppet.groups}</p><p><img alt="Puppet Set Groups step" title="Puppet Set Groups step" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-set-group.png" /></p></li></ul></li><li value="10">Click <b>Next</b>.</li><li value="11">On the Assigned Components page, select the service components that you want to assign to the workflow.<![CDATA[                ]]><p><img alt="Assigned Components" title="Assigned Components" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-assign.png" /></p></li><li value="12"> Click <b>Next</b>.</li><li value="13">Review the information on the Summary page and click <b>Finish</b>.</li></ol><h3>For Windows</h3><p>Before you begin, make sure that the autosign setting in puppet.conf is enabled.</p><p>To customize the Puppet for Windows Basic Example workflow:</p><ol><li value="1">Click the <b>Completion</b> tab.</li><li value="2">On the Completion page, select the completion workflow and click <b>Edit</b>.</li><li value="3">On the Name page, customize the name if you want.
</li><li value="4"><p>If you select a step on the Steps page, its configuration parameters are displayed in the Details area to the right.</p></li><li value="5">The starting Wait for VM to Be Ready step waits for the service to obtain an IP address and DNS name.

                <p>(A similar step would be set through <b>Add &gt; Wait For Event</b>.)</p><p class="Note">It may take longer than the default 300 seconds (five minutes) to obtain an IP address and DNS name. You may want to use two steps: one that waits for guest OS customization to complete, and one that waits for IP address and DNS name.</p></li><li value="6">The Install Puppet Client step installs the Puppet agent on the new VM. Note that if the agent has already been installed on the source template, the template just needs to be configured to use the new node name.
                <p>(A similar step would be set through  <b>Add &gt; Guest OS &gt; Run Program</b>.)</p><ul><li><b>Credentials</b>: Select the appropriate credentials or click <b>Add Credentials</b>. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line</b>: Customize the following:
                <p><code>msiexec /qn /norestart /i https://downloads.puppetlabs.com/windows/puppet6/puppet-agent-x64-latest.msi PUPPET_MASTER_SERVER=example.puppet.server.address PUPPET_CA_SERVER=example.puppet.server.address</code></p><p>Before running the workflow, you must replace both instances of <code>example.puppet.server.address</code> with the appropriate addresses for your puppet master server and CA server (the address may be the same for both).</p></li></ul></li><li value="7">The Run Agent step comes next:<p>(A similar step would be set through <b>Add &gt; Guest OS &gt; Run Program</b>.)</p><ul><li><b>Credentials</b>: Select credentials from the menu. The Configure Puppet step uses the credentials you <a href="#creds" class="hreflinks">created</a> for communications with the Puppet server. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line</b>: Customize the following entry, if necessary <code>"C:\Program Files\Puppet Labs\Puppet\bin\puppet_shell.bat" agent -t </code></li></ul></li><li value="8">Click <b>Next</b>.</li><li value="9">On the Assigned Components page, select the service components that you want to assign to the workflow.<![CDATA[                ]]><p><img alt="Assigned Components" title="Assigned Components" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-comp-wf-assign.png" /></p></li><li value="10"> Click <b>Next</b>.</li><li value="11">Review the information on the Summary page and click <b>Finish</b>.</li></ol><p>Workflow errors are written to the workflow step comment log. For more information, see <a href="track_workflows_in_progress.htm" class="hreflinks MCXref xref xrefhreflinks">View the Status of Workflows</a>.</p><p>For more details on completion workflows, see <a href="creating-completion-workflows.htm" class="MCXref xref">Create Completion Workflows</a>.</p><h2 id="SetupdecommissioningworkflowsforPuppetnodes" data-magellan-target="SetupdecommissioningworkflowsforPuppetnodes"><a name="decom_wf"></a>Set up decommissioning workflows for Puppet nodes</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>This example configures the Puppet master to delete the Puppet node, powers off the node and deletes the node from disk.</p><p>The example completion workflow uses the following steps:</p><ul style="font-weight: normal;"><li style="font-weight: normal;">Delete Node</li><li style="font-weight: normal;">Power Off</li><li style="font-weight: normal;">Perform Remove Action</li></ul><p style="font-weight: normal;">To set up a decommissioning workflow for Puppet nodes:</p><ol><li value="1">Click the <b>Completion</b> tab.</li><li value="2">On the Workflows tab, click <b>Add</b>.</li><li value="3">On the Name page, provide a name such as "Decommission Puppet Node", and from <b>Apply this Workflow</b>, select <b>after a Change Request is fulfilled</b>, then click <b>Next</b>.</li><li value="4">On the Steps page, add the following three steps:</li><ul><li style="font-weight: bold;">Delete Node</li><li style="font-weight: bold;">Power Off</li><li style="font-weight: bold;">Perform Remove Action</li></ul><li value="5">Add an <b>Execute SSH Command</b> step to configure the Puppet master to delete the node.
                <p>Select <b>Add &gt; Execute SSH Command</b>, then in the details pane, do the following:</p><ul><li>In the <b>Step Name</b> field, optionally, change the name to "Delete Node".</li><li>From <b>Credentials</b>, choose the proper credentials. This step requires Guest OS credentials, so you must create a copy of the <a href="#creds_puppet" class="hreflinks">credentials used to integrate with Puppet</a>, which are System credentials. &#160;</li><li>In the <b>Host</b> field, enter the host name of the Puppet server. For releases 8.1 and later, you can set the port value using either a fixed integer or a variable. The default is port 22.</li><li>In the <b>Command Line</b> field, type the following: <code>sudo puppet node purge #{target.dnsName}</code><p><img alt="Delete Node step" title="Delete Node step" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-execute-ssh.png" /></p></li></ul></li><li value="6">Add a <b>Perform Power Action</b> step with a <b>Stop</b> action that will execute only on running VMs.
        <p>Select <b>Add &gt; Perform Remove Action</b>, then in the details pane, do the following:</p><ul><li>In the <b>Step Name</b> field, optionally, change the name to "Power Off".</li><li>For <b>Step Execution</b>, select <b>Execute when conditions are met</b> then click <b>Edit</b>.</li><li> Enter the following condition, then click <b>OK</b>.<p class="code">#{target.state} -eq "Running"</p></li></ul><p>For more information on conditional steps, see <a href="set_condition.htm" class="MCXref xref">Make Workflow Steps Conditional</a>.</p><p><img alt="puppet-decom-wf-step3" src="Images/puppet-decom-wf-step3.png" /></p></li><li value="7">Now add a <b>Perform Remove Action</b> step with a <b>Delete from Disk</b> action.</li><li value="8">Select <b>Add &gt; Perform Remove Action</b>. In the details pane, in the <b>Step Name</b> field, type a step name of "Delete from Disk", then use the default settings.
                <p><img alt="Delete from Disk step" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-delete-from-disk.png" /></p></li><li value="9">Click <b>Next</b>.</li><li value="10">On the Assigned Forms page, select your Decommissioning form.</li><li value="11">Click <b>Next</b> and <b>Finish</b>.</li></ol><p>Now when a decommissioning change request is fulfilled, this workflow will run.</p><h2 id="Whathappensnext" data-magellan-target="Whathappensnext"><a name="whatsnext"></a>What happens next</h2><p>At this point, you have two options:</p><ul><li>Add an <a href="set_up_workflows.htm#execute_ssh_step" class="hreflinks">Execute SSH Command</a> step to your Puppet completion workflow, with a command line that applies the configuration to the Puppet node immediately.</li><li>Wait for the Puppet agent to connect to the Puppet master, at which point the agent will download its configuration and apply it.</li></ul><h2 id="ViewPuppetnodeconfigurationforaVM" data-magellan-target="ViewPuppetnodeconfigurationforaVM"><a name="puppet_details"></a>View Puppet node configuration for a VM</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Views &gt; Inventory &gt; Infrastructure or Applications</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Administrator and All Operator Levels of Access Rights</p></td></tr></table><p>When Commander identifies a VM as a Puppet node, a Puppet tab is added to the Guest OS Details pane for the VM.</p><p>The name displayed on the Puppet tab is the name of the node found on the Puppet master.</p><p>Initially, the Puppet tab contains no information. Click Refresh Puppet Information to retrieve the intended environment, class, group and variable configuration for this node from the Puppet master.</p><div><img alt="Puppet tab" title="Puppet tab" style="height: auto;max-width: 99.99%;width: auto;" src="Images/puppet-tab.png" /></div><p>Once you have retrieved the configuration for a Puppet node in Commander, the information appears for Service Portal users. Service Portal users see the Refresh Puppet Information button for VMs identified as Puppet nodes as well.</p><h2 id="SynchronizewithPuppetandadjustthesynchronizationschedule" data-magellan-target="SynchronizewithPuppetandadjustthesynchronizationschedule"><a name="sync_task"></a>Synchronize with Puppet and adjust the synchronization schedule</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Tools &gt; Scheduled Tasks
                        </p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>All Access Rights Levels
                        </p><p>Superuser can Override Schedules
                        </p></td></tr></table><p>When you integrate with a Puppet server, Commander creates and runs a Puppet Synchronization task, to retrieve the currently configured environment, groups, classes and variables from the Puppet server, as well as match any VMs currently managed by Commander to nodes registered with the Puppet master.</p><p>The task is scheduled to run nightly at 12:30 a.m. </p><p>To synchronize manually:</p><ol><li value="1">On the Scheduled Tasks page, select the <b>Puppet Synchronization</b> task.</li><li value="2">Click <b>Run Now</b>.</li></ol><p>Depending on how you use Puppet and how much churn there is in your Puppet environment, you may want to synchronize less frequently, synchronize once and then disable the task, or not synchronize at all.</p><p>To disable the task or change its schedule:</p><ol><li value="1">On the Scheduled Tasks page, select the <b>Puppet Synchronization</b> task and click <b>Edit</b>.</li><li value="2">To disable the scheduled task, clear the <b>Enabled</b> checkbox.</li><li value="3">To change the schedule, edit the <b>Frequency</b> and/or the <b>Recurrence</b>.
                <p class="Note">It's not possible to delete this scheduled task, but the task is automatically deleted if the Puppet server integration is removed.</p></li></ol><h2 id="DisableorremovePuppetservers" data-magellan-target="DisableorremovePuppetservers"><a name="disable"></a>Disable or remove Puppet servers</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; System &gt; Integration tab
                        </p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser
                        </p></td></tr></table><p>Disabling the Puppet server makes the server unavailable for connections but saves the settings, meaning that you can return to the configuration dialog later and re-enable it. Disabling the server also disables the scheduled Puppet synchronization task. The Puppet tab on the VM's Guest OS Details pane remains visible, but users won't be able to refresh Puppet information. The settings on the Puppet tab and the Form tab in the service catalog are also preserved.</p><p>Removing the Puppet server clears the settings, meaning that you must reconfigure all of the settings if you want to reintegrate later. Removing the Puppet server also removes the scheduled Puppet synchronization task and the Puppet tab on the VM's Guest OS Details pane.</p><p>To disable the Puppet server</p><ol><li value="1">On the Integration page, locate the Puppet server and click <b>Edit</b>.</li><li value="2">Clear the <b>Enabled</b> checkbox and click <b>OK</b>.</li></ol><p>To remove the Puppet server</p><ol><li value="1">On the Integration page, locate the Puppet server and click <b>Remove</b>.</li><li value="2">Click <b>Yes</b> to confirm the change.</li></ol></div><div><div style="border-top-color: rgb(245, 245, 245); border-top-style: none; border-top-width: 1px; margin-top: 22px;"><br /><div class="buttons popup-container clearfix topicToolbarProxy _Skins_ToolbarSnowDocsBottomLeft mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic;"><div class="button-group-container-left"><button class="button needs-pie previous-topic-button" title="Previous Topic" disabled="true"><div><div role="img" class="button-icon-wrapper" aria-label="Previous Topic"><div class="button-icon"> </div></div></div></button></div></div><div class="buttons popup-container clearfix topicToolbarProxy _Skins_ToolbarSnowDocsBottomRight mc-component nocontent" style="mc-topic-toolbar-items: NextTopic;"><div class="button-group-container-left"><button class="button needs-pie next-topic-button" title="Next Topic" disabled="true"><div><div role="img" class="button-icon-wrapper" aria-label="Next Topic"><div class="button-icon"> </div></div></div></button></div></div><p>&#160;</p><div style="border-top-color: rgb(245, 245, 245); border-top-style: solid; border-top-width: 1px; margin-top: 22px;"><p>&#160;</p></div><p class="footer-logo">Snow Commander <span class="mc-variable General.VersionShort variable">9.7</span> documentation</p><p class="footer-logo"><img src="../Resources/Images/copyright-regular-8.svg" /> <span class="mc-variable General.Year variable">2024</span> <span class="mc-variable General.CompanyName variable">Flexera</span>&#160;&#160;&#160;Last modified: <span class="mc-variable General.ISOShortDate variable">2024-10-16</span>&#160;&#160;&#160;<span style="color: #FFF;" class="mc-variable System.ShortTime variable">9:31 AM</span></p><p class="footer-logo"><a class="footer-links-herschel" href="https://www.flexera.com/legal/privacy-policy" target="_blank" data-mc-conditions="General.ForWebOnly">Privacy policy</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="https://www.flexera.com/legal" target="_blank">Terms and conditions</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="mailto:docsportal-feedback@snowsoftware.com" target="_blank">Feedback</a></p><p><span class="hide-when-mobile"><span style="color: #ffffff;" class="mc-variable System.ShortDate variable">10/16/2024</span>&#160;&#160;<span style="color: #ffffff;" class="mc-variable System.ShortTime variable">9:31 AM</span>&#160;&#160;<span style="color: #ffffff;" class="mc-variable General.Version variable">9.7.1</span></span></p></div></div></div>
                                        <div class="column2">
                                            <div data-sticky-container="" id="cXiBerFKJkuvM4uew3L_Fg">
                                                <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="cXiBerFKJkuvM4uew3L_Fg:top" data-bottom-anchor="contentBody:bottom" data-scroll-container=".body-container" data-sticky-on="only screen and (min-width: 901px)" data-scroll-container-on="only screen and (min-width: 901px)">
                                                    <ul data-magellan="" data-animation-duration="250" data-active-class="selected" data-scroll-container=".body-container" data-scroll-container-on="only screen and (min-width: 901px)" class="nocontent menu _Skins_SideMenuWithInThisTopicColumn mc-component">
                                                        <li class="tree-node"><a href="#IntegratePuppetwithCommander">Integrate Puppet with Commander</a>
                                                            <ul>
                                                                <li class="tree-node"><a href="#HowCommanderworkswithPuppet">How Commander works with Puppet</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Overviewoftasks">Overview of tasks</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Enablethenodecheckinstorageparameter">Enable the node check-in storage parameter</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#GenerateacertificatefortheCommanderserver">Generate a certificate for the Commander server</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Createcredentials">Create credentials</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#AddthePuppetservertoCommander">Add the Puppet server to Commander</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#ConfigurePuppetinformationforservicecatalogcomponents">Configure Puppet information for service catalog components</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#OptionalAllowuserstospecifyPuppetgroupsontherequestform">Optional: Allow users to specify Puppet groups on the request form</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Edittheexamplecompletionworkflowfornewrequests">Edit the example completion workflow for new requests</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#SetupdecommissioningworkflowsforPuppetnodes">Set up decommissioning workflows for Puppet nodes</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#Whathappensnext">What happens next</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#ViewPuppetnodeconfigurationforaVM">View Puppet node configuration for a VM</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#SynchronizewithPuppetandadjustthesynchronizationschedule">Synchronize with Puppet and adjust the synchronization schedule</a>
                                                                </li>
                                                                <li class="tree-node"><a href="#DisableorremovePuppetservers">Disable or remove Puppet servers</a>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="scrollup" style="margin-bottom: 0px; margin-left: 17px;"><a id="scrollup" style="cursor: pointer;">Scroll</a>
                                    </p>
                                    <p>
                                        <!-- This referenced snippet allows an alt text statement to be included for the logo/go-home button on the top of each page -->
                                        <script>/*<![CDATA[*/$(document).ready(function(){
   $('a.logo').attr({
     alt: 'Snow Docs Home',
     title: 'Snow Docs Home'
   });
});/*]]>*/</script>
                                    </p>
                                    <script type="text/javascript">/*<![CDATA[*/if ($(".sticky-menu > ul").children("ul").length == 0){
        $(".sticky-menu > ul").css("visibility", "hidden");
    }/*]]>*/</script>
                                    <script defer="defer" src="../Resources/Scripts/scroll_to_top_left_nav.js" type="text/javascript">
                                    </script>
                                    <script type="text/javascript">/*<![CDATA[*/$("#home-link").prependTo("div.MCBreadcrumbsBox_SnowDocs_0");/*]]>*/</script>
                                    <script type="text/javascript" src="../Resources/Scripts/fa_ext_link.js">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>