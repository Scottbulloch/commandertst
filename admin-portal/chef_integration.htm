<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation_Skin_SnowDocs" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="Admin Portal|[%=System.LinkedTitle%]" data-mc-conditions="General.NotForSPBuildHelp" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" /><title>Integrate Chef with Commander</title>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <meta charset="utf-8" />
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Styles.css" rel="stylesheet" type="text/css" />
        <link href="../Resources/fontAwesome/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
        <link href="../Resources/Stylesheets/roboto.font.css" rel="stylesheet" type="text/css" />
        <style>*
{
	box-sizing: border-box;
}

/* Create two columns that float next to each other */

.column
{
	
}

.column2
{
	
}

/* Clear floats after the columns */

.row:after
{
	content: "";
	display: table;
	clear: both;
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.home-button
{
	-pie-background: url('../Skins/Default/Stylesheets/Images/home-fa-18w.png') no-repeat center center, linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: linear-gradient(transparent, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE.htc');
}

</style>
        <link href="../Resources/TableStyles/AccessAndAvailability.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png" />
        <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="https://www.googletagmanager.com/gtag/js?id=G-L05Y74KND5" async="async">
        </script>
        <script>/*<![CDATA[*/  window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

		gtag('config', 'G-L05Y74KND5');/*]]>*/</script>
        <script defer="defer" src="../Resources/Scripts/scroll_to_top_left_nav.js" type="text/javascript">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 900px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://docs.snowsoftware.com" title="Docs Portal Home" alt="Docs Portal Home"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="All Commander Docs" title="All Commander Docs" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Commander Docs</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div style="width: 100%; overflow: hidden;"><span class="hide-when-mobile"><div><div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBarPrint mc-component nocontent" style="mc-topic-toolbar-items: Print;"><div class="button-group-container-left"><button class="button needs-pie print-button" title="Print this page"><div><div role="img" class="button-icon-wrapper" aria-label="Print"><div class="button-icon"> </div></div></div></button></div></div><a href="/commander/index.htm"><div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBarHome mc-component nocontent" style="mc-topic-toolbar-items: Home;"><div class="button-group-container-left"><button class="button needs-pie home-button" title="Commander Docs Home"><div><div role="img" class="button-icon-wrapper"><div class="button-icon"> </div></div></div></button></div></div></a></div><div style="float: right; padding-right: 25px; padding-left: 25px;"><a href="https://www.snowsoftware.com" target="_blank" style="font-size: 11px; color: #606f7b;">snowsoftware.com</a>&#160;&#160;&#160;</div></span><span id="home-link"><a style="font-size: 11px;font-style: normal;color: #606f7b;" href="../index.htm">Commander</a> / </span>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_SnowDocs_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="3" data-mc-toc="True">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="column"> <div role="main" id="mc-main-content"><h1 id="IntegrateChefwithCommander" data-magellan-target="IntegrateChefwithCommander"><a name="aanchor228"></a><MadCap:concept term="Admin Portal" />Integrate Chef with Commander</h1><p>You can integrate Chef's automation software with Commander to automate repetitive configuration tasks for provisioning VMs.</p><p>Requested VMs can be automatically deployed and configured as Chef nodes. You can create workflows that specify the configuration for a node in the Chef server. You can also set up automatic VM decommissioning driven by expiry date or by a change request process, including removal of the node configuration from the Chef server.</p><p>If you have integrated with the Chef IT automation system, a Chef tab appears in the Infrastructure and Applications views for any VMs identified as Chef nodes. This tab displays recipe and role information.</p><p>If the tab contains no information, or if you want to retrieve new information, click Refresh Chef Information.</p><p>You can integrate multiple Chef servers or multiple Chef organizations with Commander, depending on how you're using Chef. This multi-tenant support extends throughout Commander's automated provisioning, including the service catalog, request forms, workflows, and workflow variables. For example, if you have one Chef organization for Linux and one for Windows, you can add both of these as separate integrations, so that Commander is aware of the two distinct sets of users, cookbooks, recipes, and roles. You can set the Chef organization in the service catalog blueprint, which means that you can easily configure the service definition for use by a specific tenant.</p><p>You can specify the Chef environment (such as development, testing, staging and production) for a component in the service catalog blueprint. Workflow variables allow you to return the specified environment. Both Commander and Service Portal users can view the intended Chef environment for a Chef node, along with its roles and recipes.</p><p>Integrating Commander with Chef allows you to:</p><ul><li>Set default values for environments and run-lists in the service catalog.</li><li>Optionally, present Chef configuration choices to end users when requesting new services.</li><li>Configure Chef-specific workflow steps for common functions such as creating nodes, bootstrapping nodes, supplying roles and recipes for node configuration, and deleting nodes during decommissioning.</li><li>Access VM configuration, metadata, and request form data when configuring a node in the Chef server.</li><li>Identify Chef nodes and view their configuration in Commander and the Service Portal.</li><li>Synchronize with the Chef server on a configurable schedule.</li></ul><h2 id="Overviewoftasks" data-magellan-target="Overviewoftasks">Overview of tasks</h2><p>The tasks involved in integrating with Chef are:</p><ol><li value="1"><a href="#creds" class="hreflinks">Add System credentials for the Chef server</a></li><li value="2"><a href="#server_integration" class="hreflinks">Add a Chef server or Chef organization to Commander</a></li><li value="3"><a href="#catalog_defaults" class="hreflinks">Configure Chef information in the service catalog</a></li><li value="4"><a href="#form" class="hreflinks">Optional: Allow users to set Chef roles and recipes on the request form</a></li><li value="5"><a href="#environment" class="hreflinks">Optional: Allow users to set the Chef environment on the request form</a></li><li value="6"><a href="#completion_workflow" class="hreflinks">Edit the example completion workflows for new requests</a></li><li value="7"><a href="#decom_wf" class="hreflinks">Set up a decommissioning workflow for Chef nodes</a></li><li value="8"><a href="#sync_task" class="hreflinks">Optional: Adjust the schedule for Chef synchronization</a></li></ol><p class="Note">To set this up, you must use Chef 12.x (either hosted or installed).</p><h2 id="AddsystemcredentialsfortheChefserverorCheforganization" data-magellan-target="AddsystemcredentialsfortheChefserverorCheforganization"><a name="creds"></a>Add system credentials for the Chef server or Chef organization</h2><p>Chef integration requires an RSA key in PEM format. When you create credentials for integrating Chef with Commander, you must have a .PEM file to authenticate with.</p><p>RSA public-key pairs are used to authenticate the Chef-client with the Chef server every time a Chef-client needs access to data that's stored on the Chef server. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the Chef server can be managed. Each client has its own RSA key.</p><p>As shown in <a href="#completion_workflow" class="hreflinks">Edit the example completion workflows for new requests</a>, when you use the Configure Chef workflow step to create a Chef node, Commander creates a private RSA key for the client. You can then copy this key to the target VM in .PEM format with a Copy File workflow step.</p><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Credentials</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>For each Chef server or Chef organization you want to integrate with Commander, follow this procedure:
        </p><ol><li value="1">On the Credentials page, click <b>Add</b>.</li><li value="2">In the Add Credentials dialog, from <b>Credential Type</b>, choose <b>RSA Key</b>.</li><li value="3">Enter the credentials for an account that Commander can use to connect to the Chef server. You must use a .PEM file to authenticate, so you must paste the contents of the .PEM file into the RSA Key field.</li><li value="4">Provide a description, like "Chef", to serve as a memory aid to administrators when configuring tasks requiring credentials.</li><li value="5">From <b>Category</b>, choose <b>System Credentials</b>.</li><li value="6">Click <b>OK</b>.</li></ol><h2 id="AddChefserverorCheforganizationstoCommander" data-magellan-target="AddChefserverorCheforganizationstoCommander"><a name="server_integration"></a>Add Chef server or Chef organizations to Commander</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; System</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser</p></td></tr></table><p>For each Chef server or Chef organization you want to integrate with Commander, follow this procedure:
        </p><ol><li value="1">Click the <b>Integration</b> tab.</li><li value="2">On the Integration page, click <b>Add &gt; Chef Server</b>.</li><li value="3">In the <b>Host/IP</b> field, type the host name or IP address and port number for the Chef server. The default port is 443.
                <p>You must use Chef 12.x (either installed or hosted).</p></li><li value="4">From <b>Credentials</b>, choose the Chef credentials you created in the previous procedure.</li><li value="5"><a name="node_name"></a>The <b>Node Name</b> field allows Commander to match any VMs currently managed by Commander to nodes registered with the Chef server. The field is prepopulated with the variable <code>#{target.dnsName}</code>, which returns the DNS name of the VM. If you have a different naming convention for Chef nodes, enter it.
        <p class="Note">Commander uses variable substitution to identify Chef nodes in your infrastructure. Commander obtains a list of registered node names from the Chef server then compares them with VM names in your infrastructure. When there are matches, it marks the VM as a Chef node.</p></li></ol><ol data-mc-continue="true"><li value="6">In the <b>Organization</b> field, type the name of the Chef organization you want to manage with Commander.</li><li value="7">The <b>Display Name</b> field is prepopulated with the value from the Organization field. If you want to use a different display name for this integration, enter it.</li><li value="8">Click <b>Test</b> to test the connection.
                <p>Commander tries to establish a connection to the specified server. This test doesn't verify the Node Name.</p></li><li value="9">Once you see a Success message, click <b>OK</b> to save the configuration.</li></ol><p>After you click <b>OK</b>, Commander creates and runs the Chef Synchronization task. This task retrieves the currently configured environments, roles and recipes from the Chef server. It also matches any VMs currently managed by Commander to nodes registered with the Chef server.</p><p>You can double-click the Chef Synchronization task in the Tasks tab at the bottom of the Commander console to view the associated events. The following image shows that Commander found Chef nodes, recipes, roles, and environments:</p><p><img alt="Chef Synchronization" title="Chef Synchronization" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-sync-events.png" /></p><p>This task is scheduled to run nightly. See <a href="#sync_task" class="hreflinks">Synchronizing with Chef and Adjusting the Synchronization Schedule</a> below for more information.</p><h2 id="ConfigureChefinformationintheservicecatalog" data-magellan-target="ConfigureChefinformationintheservicecatalog"><a name="catalog_defaults"></a>Configure Chef information in the service catalog</h2><p>You can configure Chef information in the service catalog. You can then use variables to pass the default values to a completion workflow that instructs the Chef server to apply the configuration to requested VMs (as explained <a href="#completion_workflow" class="hreflinks">Edit the example completion workflows for new requests</a> later in this topic).</p><p>If you want to allow users to specify Chef information on the request form (as discussed in <a href="#form" class="hreflinks">Optional: Allow users to set a Chef run-list on the request form</a>), the defaults you select in this procedure appear as defaults on the form.</p><p>The following are ideas of how you might set up your service catalog blueprint to match your requirements:</p><ul><li>If you don't want to allow users to make changes on the form, configure the run-list on the Chef tab in the catalog blueprint, and don't add any Chef elements to the Form tab.</li><li>If your requesters are developers familiar with Chef, add the Chef Run-List control to the Form tab in the catalog, so that they can configure their own run-list. You can configure defaults on the Chef tab of the service catalog blueprint if you like.</li><li>If your requesters just need to specify one or more additional applications for a requested service, add the simpler Chef Roles or Chef Recipes elements to the form.</li></ul><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Roles of Superuser and Enterprise Admin</p></td></tr></table><p>To configure Chef information in the service catalog:</p><ol><li value="1">Click the <b>Catalog</b> tab.</li><li value="2">On the Catalog tab, locate the service in the list and click <b>Edit</b>.</li><li value="3">Go to the component's page in the wizard. If you have <a href="#server_integration" class="hreflinks">integrated with Chef</a>, you should see a Chef tab.</li><li value="4">Click the <b>Chef</b> tab.
                <p>This page displays the Chef organizations, environments, roles and recipes that are retrieved from the Chef server.</p></li><li value="5">If you have added multiple Chef servers or organizations, select a server or organization from the <b>Chef Organization</b> menu. Otherwise, the Chef organization is displayed as a read-only value.</li><li value="6">Choose an environment from the <b>Chef Environment</b> menu.
                <p>The roles and recipes for the selected environment are displayed.</p></li><li value="7">Select one or more default roles and recipes from the <b>Available Roles </b>and<b> Recipes</b> pick-list. 
                <p>Ctrl-click to select multiple roles and recipes. Use the arrow buttons between the lists to move your selections into the Current Run-List. Then, use the arrow buttons to the right of Current Run-List to order the roles and recipes properly.</p><p class="Note">If you don't select default roles and recipes, no defaults are applied.</p></li><li value="8">Click <b>Finish</b>. Or, if you want to allow users to configure roles and recipes when requesting this service, continue to the next section.</li></ol><h2 id="OptionalAllowuserstosetaChefrunlistontherequestform" data-magellan-target="OptionalAllowuserstosetaChefrunlistontherequestform"><a name="form"></a>Optional: Allow users to set a Chef run-list on the request form</h2><p>If you want to allow users to configure a Chef run-list or choose Chef roles and recipes when requesting a new service, edit the service catalog entry. In this example, you want users to specify the Chef run-list for new VMs. You can then use the run-list configured on the form as input to a VM completion workflow or command workflow (which we'll create next).</p><ul class="NoteMultiple"><li>If you want to customize the list of recipes or roles on the form (for example, if you want to display "friendlier" role and recipe names), you can create a <a href="working-with-custom-attributes.htm" class="hreflinks">list-type custom attribute</a> for use on the form instead of using the Chef Recipes and Chef Roles form elements.

        </li><li><a name="form_conflict"></a>The Chef Run-List form element can't co-exist with either the Chef Recipes or the Chef Roles form element.</li></ul><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>To allow users to set a Chef run-list on the request form:</p><ol><li value="1">Click the <b>Catalog</b> tab.</li><li value="2">Continuing from the previous section, in the <b>Service Catalog</b> blueprint, click the <b>Form</b> tab.</li><li value="3">In the <b>Toolbox</b> at the right side of the page, under <b>Chef</b>, click the <b>Chef Run-List</b> form element.
        <p>The run-list is added as a service request form component.</p><p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="Images/chef-form-tab-override.png" data-mc-popup-alt="Chef Form"><img class="MCPopupThumbnail img imgThumbnail" data-mc-width="916" data-mc-height="470" src="Images/chef-form-tab-override_thumb_0_0.png" alt="Chef Form" title="Chef Form" tabindex="" /></a></p></li><li value="4">In the newly added component, optionally enter a custom display label for the form element.</li><li value="5">From the <b>Selectable Values</b> list, Ctrl-click all values you want to allow users to select.</li><li value="6">Do one of the following:</li><ul><li>If you want users requesting a service to be able to override the defaults you specify, enable <b>Override Default Values</b>.</li><li>If you don't want users requesting a service to be able to override the defaults you specify, clear <b>Override Default</b>.</li></ul><li value="7">To force users to select one or more values, enable <b>Required</b>.</li><li value="8">Click <b>OK</b> and <b>Save</b>.</li><li value="9">If you want to predefine the Chef environment and/or allow requesters to specify the environment, continue to <a href="#environment" class="hreflinks">Optional: Allow users to set the Chef environment on the request form</a>.</li><li value="10">To test your form, go to <b>Configuration &gt; Self-Service &gt; Forms</b>.</li><li value="11">Select the <b>Default Service</b> form in the list and click <b>Preview</b>. In the list of services, select the service you configured for Chef.</li></ol><h2 id="OptionalAllowuserstosettheChefenvironmentontherequestform" data-magellan-target="OptionalAllowuserstosettheChefenvironmentontherequestform"><a name="environment"></a>Optional: Allow users to set the Chef environment on the request form</h2><p>The Configure Chef workflow step allows you to specify the Chef environment. If you want to allow requesters to select the Chef environment on the form, you need to create a list-type custom attribute and add it to the service catalog entry.</p><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Custom Attributes</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Roles of Superuser and Enterprise Admin</p></td></tr></table><p>To allow users to set the Chef environment on the request form:</p><ol><li value="1">Continuing from the previous section, in the <b>Service Catalog</b>, click the <b>Attributes</b> tab.</li><li value="2">Click <b>Add Attributes</b>.</li><li value="3">At the bottom of the Add Attributes dialog, click <b>Create New Attribute</b>.</li><li value="4">In the Configure Custom Attribute dialog, enter a name for the new custom attribute, for example, "Chef Environment".</li><li value="5">From <b>Type</b>, choose <b>List</b>.</li><li value="6">From <b>Applies To</b>, choose <b>Form</b> to create a custom attribute to capture information required only during the service request process (form attributes are not attached to deployed services).</li><li value="7">Clear the <b>Edit in Service Portal</b> option, then click <b>Next</b>.</li><li value="8"><a name="regex"></a>On the <b>Configure Attribute</b> page, enter a comma-separated list of values that users can select from a menu list for the attribute. For example:&#160;"development,production,staging,testing", click <b>Add</b>, then <b>Finish</b>.</li><li value="9">In the <b>Add Attributes </b>dialog, the new custom attribute is selected. Click <b>OK</b>.</li><li value="10">On the <b>Attributes</b> tab, the new attribute is displayed. Optionally choose a default environment.</li><li value="11">If you want to allow requesters to specify the Chef environment, click to the <b>Form</b> tab.</li><li value="12">The new custom attribute is listed in the <b>Toolbox</b> at the right side of the tab. Click the new attribute to add it to the form.</li><li value="13">Locate the attribute that was added to the Chef Environment form, and click <b>Edit</b> on the <b>Chef Environment</b> form element and enable the <b>Required</b> checkbox, if a value for this form element is required.
                <p class="Note">If you did not specify a default environment on the Attributes tab, you should enable Required.</p></li><li value="14">Click <b>OK</b>, and click <b>Finish</b> to save the catalog entry.</li><li value="15">To test your form, do either of the following:
           
                <ul><li>Go to <b>Configuration &gt; Self-Service &gt; Form Designer</b>. Select the <b>Default Service</b> form in the list and click <b>Preview</b>. In the list of services, select the service you configured for Chef.</li><li>Sign in to the Service Portal and request the Chef service you just configured.</li></ul></li></ol><h2 id="Edittheexamplecompletionworkflowsfornewrequests" data-magellan-target="Edittheexamplecompletionworkflowsfornewrequests"><a name="completion_workflow"></a>Edit the example completion workflows for new requests</h2><p>Commander includes two example Chef workflows—one for Linux and one for Windows. These examples create the Chef node, install and configure the Chef client on the VM, and configure the Chef server. You must customize these example workflows. And once you've customized a completion workflow, you can copy it and make modifications for other operating systems.</p><p><b>Prerequisite</b>: Ensure that the VM's networking and host name are properly configured, either through a customization spec or through workflow steps. For more information, including guidance on credentials, see <a href="config_network_wf_step.htm" class="MCXref xref">Configure OS Networking Through Workflow Steps</a>.</p><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p>To edit the example completion workflows for new requests:</p><ol><li value="1">Click the <b>Completion</b> tab.</li><li value="2">Select either the Chef for Linux Example or the Chef for Windows Example and click <b>Edit</b>.</li><li value="3">On the Name page, customize the name if you want.</li><li value="4">On the Steps page, the following steps are preconfigured:<p><img alt="Chef steps" title="Chef steps" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-comp-wf-all-steps.png" /></p></li><li value="5">The Wait for VM to Be Ready step waits for the service to obtain an IP address and DNS name.<p><img alt="chef-comp-wf-wait" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-comp-wf-wait.png" /></p><p class="Note">For Windows VMs, it may take longer than the default 300 seconds (five minutes) to obtain an IP address and DNS name. You may want to use two steps: one that waits for guest OS customization to complete, and one that waits for IP address and DNS name.</p></li><li value="6">The Create Node step creates a Chef node, using a run-list by default. This step also creates the private RSA key for the chef-client. We'll access this key in a later step.<ul><li><b>Organization:</b> By default, the organization is determined automatically. </li><p class="caution">The <b>Automatic</b> setting only works with a single Chef integration.
If you have integrated multiple Chef servers, or if you have separately integrated multiple Chef organizations, you must select an organization from the drop-down list. </p><li><b>Action</b>: By default, this step uses a run-list to configure the node. If you want to configure the node using a list of roles and recipes instead, select<b> Create Node (Roles and Recipes) </b>instead.</li><li><b>Node</b>: By default, this field is prepopulated with the variable <code>#{target.dnsName}</code>. Edit this value if required.<p class="Note">Commander uses variable substitution to identify Chef nodes in your infrastructure. Commander obtains a list of registered node names from the Chef server, then compares them with VM names in your infrastructure. When there is a match, it marks the VM as a Chef node.</p></li><li><b>Environment </b>: If you added the Chef environment to the request form as a custom attribute (as described <a href="#environment" class="hreflinks">above</a>), enter the following variable in the Environment field:<p class="code">#{target.settings.customAttribute['attribute name']}</p><p>For example, if you created a custom attribute called Chef Environment, enter the following variable:</p><p class="code">#{target.settings.customAttribute['Chef Environment']}</p><p>Otherwise, leave the default value, #{target.settings.chef.environment}.</p><p class="tip">In any text field that supports variables, click <span class="f_Icons_Inline"></span> to open the script editor and select variables for the current context.</p></li></ul><ul><li><b>Recipes </b>and <b>Roles </b>: If the Action is <b>Create Node (Roles and Recipes)</b>, these fields are prepopulated with variables, to return the values selected on the form, or in the service catalog, if not selected on the form. Edit this value if required.</li><li><b>Run-List</b> : If the Action is <b>Create Node (Run-List)</b>, this field is prepopulated with a variable that returns the run-list configured on the form, or in the service catalog, if not selected on the form. Edit this value if required. This field accepts a comma-separated list of roles and recipes, in Chef run-list format. For example:<p class="code">role[linux],recipe[logrotate],recipe[logrotate::global]</p><p>The RSA key is stored at the following location, so that you can access it later if required for troubleshooting:</p><p class="code">#{system.directory}\temp\#{target.chefNodeName}.key</p><p>where <code>#{system.directory}</code> is the location of the Tomcat directory in your Commander installation.</p><p><img alt="chef-comp-wf-create-node" src="Images/chef-comp-wf-create-node.png" /></p></li></ul></li><li value="7">The Install Chef Client step installs the chef-client on the node.<ul><li><b>Credentials</b>: Select credentials from the drop-down menu or click <b>Add Credentials</b>. On Windows, Administrator credentials are required. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line</b>: Enter the install command that you want to run.</li><p>Linux example:
          </p><p class="code">curl -L https://www.chef.io/chef/install.sh | bash -s -- &amp;&amp; mkdir /etc/chef</p><p>Windows example:
            </p><p class="code">msiexec /qn /i https://opscode-omnibus-packages.s3.amazonaws.com/windows/2008r2/x86_64/chef-client-12.3.0-1.msi ADDLOCAL="ChefClientFeature"</p><p><img alt="chef-comp-wf-install-client" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-comp-wf-install-client.png" /></p></ul></li><li value="8">The Copy client.rb step loads the client.rb file, which is used to specify configuration details for the chef-client.<p>When you integrate a Chef server or organization, an example configuration file is saved to:
        </p><p class="code">#{system.directory}\public\$org-client.rb</p><p>where <code>#{system.directory}</code> is the location of the Tomcat directory in your Commander installation, and <code>$org</code> is the name of the Chef organization.</p><p>For example, if you integrated a Chef organization named "dev", the file would be located here:</p><p class="code">C:\Program Files\Embotics\Commander\tomcat\public\dev-client.rb</p><p>You can customize this configuration file. The default file looks similar to the following:
        </p><div style="overflow: auto; overflow-y: hidden;"><p class="code">log_level &#160; &#160; &#160; &#160;:auto<br />log_location &#160; &#160; STDOUT<br />chef_server_url &#160;"https://chef.example.com:443/organizations/dev"<br />ssl_verify_mode &#160;:verify_none;</p></div><p>Do the following in the details section:
        </p><ul><li><b>Credentials</b>: Choose the appropriate credentials from the list or click Add Credentials. See <a href="set_up_workflows.htm#run_program_step">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Source</b>: Specify the located of the <code>client.rb</code> file. Variables are used to specify the location of the <code>client.rb</code> file, as explained above:<p class="code">#{system.directory}\public\#{target.settings.chef.organization}-client.rb</p></li><li><b>Destination</b>: Customize the path to the chef-client installation on the target VM if necessary.<p><img alt="chef-comp-wf-client-rb" src="Images/chef-comp-wf-client-rb.png" /></p></li></ul></li><li value="9">The Copy client.pem step uses the output from the Create Node step, the RSA private key, to create a .PEM file and copy it to the target VM:</li><ul><li><b>Credentials</b>: Choose the proper credentials from the menu. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Source</b>: The following path to the RSA key is prepopulated: <br /><code>#{system.directory}\temp\#{target.chefNodeName}.key</code><br />where<code> #{system.directory}</code> is a variable that returns the location of the Tomcat directory in your Commander installation.</li><li><b>Destination</b>: Customize the path to the chef-client installation on the target VM if necessary.</li><p><img alt="chef-comp-wf-copy-pem" src="Images/chef-comp-wf-copy-pem.png" /></p></ul><li value="10">The final Run Chef Client step runs the chef-client:<ul><li><b>Credentials</b>: Select credentials from the &#160;menu. See <a href="set_up_workflows.htm#run_program_step" class="hreflinks">Workflow Steps Reference</a> for credentials guidance.</li><li><b>Command Line for Linux</b>: Customize the following if necessary: <br /><code>chef-client -l error</code></li><li><b>Command Line for Windows</b>: Customize the following if necessary:  <br /><code>c:\opscode\chef\bin\chef-client.bat -l error</code></li><p><img alt="chef-comp-wf-run-client" src="Images/chef-comp-wf-run-client.png" /></p></ul></li><li value="11">Click <b>Next</b>.</li><li value="12">On the Assigned Components page,  select the service components that you want to assign to the workflow.<div><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="Images/chef-comp-wf-assign.png" data-mc-popup-alt="Chef Completion Workflow Configuration Summary Page"><img class="MCPopupThumbnail img imgThumbnail" data-mc-width="1151" data-mc-height="651" src="Images/chef-comp-wf-assign_thumb_0_0.png" alt="Chef Completion Workflow Configuration Summary Page" title="Chef Completion Workflow Configuration Summary Page" tabindex="" /></a></div></li><li value="13"> Click <b>Next</b>.</li><li value="14">On the Summary page, review the information and click <b>Finish</b>.</li></ol><p>Workflow errors are written to the workflow step comment log. See <a href="track_workflows_in_progress.htm" class="hreflinks">Troubleshooting and Tracking Workflows</a> for more information.</p><p>For more details on completion workflows, see <a href="completion-workflows.htm" class="MCXref xref">Completion Workflows</a>.</p><p class="Note">Once you've set up one completion workflow, you can copy it and make modifications for other operating systems. Select the workflow on the Workflows tab and click Copy.</p><h2 id="SetupdecommissioningworkflowsforChefnodes" data-magellan-target="SetupdecommissioningworkflowsforChefnodes"><a name="decom_wf"></a>Set up decommissioning workflows for Chef nodes</h2><p>This example creates a completion workflow that instructs the Chef server to delete the Chef node, power off the VM and delete the VM from disk. You can also create a <a href="set_up_service_workflow.htm" class="hreflinks">command workflow</a> for decommissioning, using the same steps and actions.</p><p>The example completion workflow uses the following steps:</p><ul style="font-weight: normal;"><li style="font-weight: normal;">Delete Node</li><li style="font-weight: normal;">Power Off</li><li style="font-weight: normal;">Perform Remove Action</li></ul><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; Self-Service</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser and Enterprise Admin</p></td></tr></table><p style="font-weight: normal;">To set up a decommissioning workflow for Chef nodes:</p><ol><li value="1">Click the <b>Completion</b> tab, then click <b>Add</b>.</li><li value="2">On the Name page, provide a name such as "Decommission Chef Node", and from <b>Apply this Workflow</b>, choose <b>after a Change Request is fulfilled</b>, then click <b>Next</b>.</li><li value="3">On the Steps page, add a <b>Configure Chef</b> step with a <b>Delete Node</b> action.</li><p class="Note">The Configure Chef step uses the credentials you <a href="#creds" class="hreflinks">created</a> for integration with the Chef server.</p><p>Choose <b>Add &gt; Guest OS &gt; Configure Chef</b>, then in the details section, do the following:</p><ul><li>Change <b>Step Name</b> to "Delete Node".</li><li><b>Organization</b> is set to  <b>Automatic</b> by default.</li><p class="caution">Unless the node was created by Commander, the <b>Automatic</b>setting only works with a single Chef integration.
If you have integrated multiple Chef servers, or if you have separately integrated multiple Chef organizations, you can must select a listed organization.</p><p><img alt="Delete Chef node" title="Delete Chef node" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-decom-del-node.png" /></p></ul><li value="4">Next add a <b>Perform Power Action</b> step with a <b>Stop</b> action that will execute only on running VMs.
                <p>Choose <b>Add &gt; Perform Power Action</b>, then in the details section, do the following:</p><ul><li>From <b>Step Execution</b>, choose <b>Execute when conditions are met</b>, click <b>Edit</b>, enter the following, then click <b>OK</b>:
                <p class="code" xml:space="preserve">#{target.state} -eq "Running"</p><p><img alt="puppet-decom-wf-step3" src="Images/puppet-decom-wf-step3.png" /></p><p>For more information on conditional steps, see <a href="set_condition.htm" class="hreflinks">Making Workflow Steps Conditional</a>.</p></li></ul></li><li value="5">Now add a <b>Perform Remove Action</b> step with a <b>Delete from Disk</b> action.
			<p>Choose <b>Add &gt; Perform Remove Action</b>, then in the details section, in the Step Name field, type "Delete from Disk", then use the default settings.</p></li><li value="6">Click <b>Next</b>.</li><li value="7">On the Assigned Forms page, select your Decommissioning form.</li><li value="8">Click <b>Next</b> and <b>Finish</b>.
                <p>Now when a decommissioning change request is fulfilled, this workflow will run.</p></li></ol><h2 id="Whathappensnext" data-magellan-target="Whathappensnext"><a name="whatsnext"></a>What happens next</h2><p>When a user requests the service you configured with Chef information, the VM will be automatically deployed and the completion workflow will run on the deployed VM. Once the Chef client on the deployed VM connects to the Chef server, the client will download its configuration and apply it to the VM.</p><h2 id="ViewChefnodeconfigurationforaVM" data-magellan-target="ViewChefnodeconfigurationforaVM"><a name="chef_details"></a>View Chef node configuration for a VM</h2><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Views &gt; Inventory &gt; Infrastructure or Applications</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Administrator and All Operator Levels of Access Rights</p></td></tr></table><p>When Commander identifies a VM as a Chef node, a Chef tab is added to the Guest OS Details section for the VM.</p><p>The name displayed on the Chef tab is the name of the node found on the Chef server.</p><p>Initially, the Chef tab contains no information. Click Refresh Chef Information to retrieve the intended role and recipe configuration for this node from the Chef server.</p><div><img alt="Chef tab" title="Chef tab" style="height: auto;max-width: 99.99%;width: auto;" src="Images/chef-tab.png" /></div><p>Once you have retrieved the configuration for a Chef node in Commander, the information appears for Service Portal users. Service Portal users see the Refresh Chef Information button for VMs identified as Chef nodes as well.</p><h2 id="SynchronizewithChefandadjustthesynchronizationschedule" data-magellan-target="SynchronizewithChefandadjustthesynchronizationschedule"><a name="sync_task"></a>Synchronize with Chef and adjust the synchronization schedule</h2><p>When you integrate with a Chef server, Commander creates and runs a Chef Synchronization task, to retrieve the currently configured roles and recipes from the Chef server as well as match any VMs currently managed by Commander to nodes registered with the Chef server.</p><p>The task is scheduled to run nightly at 12:30 a.m.</p><p>To synchronize manually:</p><ul><li>On the Scheduled Tasks page, select the <b>Chef Synchronization</b> task and click <b>Run Now</b>.
                <p>Depending on how you use Chef and how much churn there is in your Chef environment, you may want to synchronize less frequently, synchronize once and then disable the task, or not synchronize at all.</p></li></ul><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Tools &gt; Scheduled Tasks</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>All Access Rights Levels</p><p>Superuser can Override Schedules</p></td></tr></table><p>To disable the task or change its schedule:</p><ol><li value="1">On the Scheduled Tasks page, select the <b>Chef Synchronization</b> task and click <b>Edit</b>.</li><li value="2">To disable the scheduled task, uncheck the <b>Enabled</b> checkbox.</li><li value="3">To change the schedule, edit the <b>Frequency</b> and/or the <b>Recurrence</b>.
        <p class="Note">It's not possible to delete this scheduled task, but the task is automatically deleted if the Chef server integration is removed.</p></li></ol><h2 id="DisableorremoveChefservers" data-magellan-target="DisableorremoveChefservers"><a name="disable"></a>Disable or remove Chef servers</h2><p>Disabling a Chef server makes the server unavailable for connections but saves all of your settings, meaning that you can return to the configuration dialog later and re-enable it. Disabling a server also disables the scheduled Chef synchronization task for that server. The Chef tab on the VM's Guest OS Details section remains visible, but users won't be able to refresh Chef information. The settings on the Chef tab and the Form tab in the service catalog are also preserved.</p><p>Removing a Chef server clears the settings, meaning that you must reconfigure all of the settings if you want to reintegrate later. Removing a Chef server also removes the scheduled Chef synchronization task and the Chef tab on the VM's Guest OS Details section.</p><table style="width: 100%;mc-table-style: url('../Resources/TableStyles/AccessAndAvailability.css');" class="TableStyle-AccessAndAvailability" cellspacing="0"><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Access:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Configuration &gt; System</p></td></tr><tr class="TableStyle-AccessAndAvailability-Body-Body1"><td class="TableStyle-AccessAndAvailability-BodyE-Column1-Body1"><p><b>Available to:</b></p></td><td class="TableStyle-AccessAndAvailability-BodyD-Column2-Body1"><p>Commander Role of Superuser</p></td></tr></table><p>To disable a Chef server:</p><ol><li value="1">Click the <b>Integration</b> tab.</li><li value="2">On the Integration page, locate the Chef server and click <b>Edit</b>.</li><li value="3">Clear the <b>Enabled</b> checkbox and click <b>OK</b>.</li></ol><p>To remove a Chef server:</p><ol><li value="1">Click the <b>Integration</b> tab.</li><li value="2">On the Integration page, locate the Chef server and click <b>Remove</b>.</li><li value="3">Click <b>Yes</b> to confirm the change.</li></ol></div><div><div style="border-top-color: rgb(245, 245, 245); border-top-style: none; border-top-width: 1px; margin-top: 22px;"><br /><div class="buttons popup-container clearfix topicToolbarProxy _Skins_ToolbarSnowDocsBottomLeft mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic;"><div class="button-group-container-left"><button class="button needs-pie previous-topic-button" title="Previous Topic" disabled="true"><div><div role="img" class="button-icon-wrapper" aria-label="Previous Topic"><div class="button-icon"> </div></div></div></button></div></div><div class="buttons popup-container clearfix topicToolbarProxy _Skins_ToolbarSnowDocsBottomRight mc-component nocontent" style="mc-topic-toolbar-items: NextTopic;"><div class="button-group-container-left"><button class="button needs-pie next-topic-button" title="Next Topic" disabled="true"><div><div role="img" class="button-icon-wrapper" aria-label="Next Topic"><div class="button-icon"> </div></div></div></button></div></div><p>&#160;</p><div style="border-top-color: rgb(245, 245, 245); border-top-style: solid; border-top-width: 1px; margin-top: 22px;"><p>&#160;</p></div><p class="footer-logo">Snow Commander <span class="mc-variable General.VersionShort variable">9.6</span> documentation</p><p class="footer-logo"><img src="../Resources/Images/copyright-regular-8.svg" /> <span class="mc-variable General.Year variable">2024</span> <span class="mc-variable General.CompanyName variable">Snow Software</span>&#160;&#160;&#160;Last modified: <span class="mc-variable General.ISOShortDate variable">2024-05-21</span>&#160;&#160;&#160;<span style="color: #FFF;" class="mc-variable System.ShortTime variable">7:04 PM</span></p><p class="footer-logo"><a class="footer-links-herschel" href="https://www.snowsoftware.com/legal/termsofuse" target="_blank" data-mc-conditions="General.ForWebOnly">Terms of use</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="https://www.snowsoftware.com/seo/legal-privacy-policy" target="_blank" data-mc-conditions="General.ForWebOnly">Privacy policy</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="https://www.snowsoftware.com/legal/dataprotection" target="_blank">Data protection</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="https://go.snowsoftware.com/subscription-center.html" target="_blank">Subscription&#160;center</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="https://community.snowsoftware.com/s" target="_blank">Community</a>&#160;&#160;&#160;<a class="footer-links-herschel" href="mailto:docsportal-feedback@snowsoftware.com" target="_blank">Docs Feedback</a></p><p><span class="hide-when-mobile"><span style="color: #ffffff;" class="mc-variable System.ShortDate variable">5/21/2024</span>&#160;&#160;<span style="color: #ffffff;" class="mc-variable System.ShortTime variable">7:04 PM</span>&#160;&#160;<span style="color: #ffffff;" class="mc-variable General.Version variable">9.6.3</span></span></p></div></div></div>
                                        <div class="column2">
                                            <div data-sticky-container="" id="oHoA5Ygrlk6Z7zQcslNfkQ">
                                                <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="oHoA5Ygrlk6Z7zQcslNfkQ:top" data-bottom-anchor="contentBody:bottom" data-scroll-container=".body-container" data-sticky-on="only screen and (min-width: 901px)" data-scroll-container-on="only screen and (min-width: 901px)">
                                                    <ul data-magellan="" data-animation-duration="250" data-active-class="selected" data-scroll-container=".body-container" data-scroll-container-on="only screen and (min-width: 901px)" class="nocontent menu _Skins_SideMenuWithInThisTopicColumn mc-component">
                                                        <li><a href="#IntegrateChefwithCommander">Integrate Chef with Commander</a>
                                                        </li>
                                                        <ul>
                                                            <li><a href="#Overviewoftasks">Overview of tasks</a>
                                                            </li>
                                                            <li><a href="#AddsystemcredentialsfortheChefserverorCheforganization">Add system credentials for the Chef server or Chef organization</a>
                                                            </li>
                                                            <li><a href="#AddChefserverorCheforganizationstoCommander">Add Chef server or Chef organizations to Commander</a>
                                                            </li>
                                                            <li><a href="#ConfigureChefinformationintheservicecatalog">Configure Chef information in the service catalog</a>
                                                            </li>
                                                            <li><a href="#OptionalAllowuserstosetaChefrunlistontherequestform">Optional: Allow users to set a Chef run-list on the request form</a>
                                                            </li>
                                                            <li><a href="#OptionalAllowuserstosettheChefenvironmentontherequestform">Optional: Allow users to set the Chef environment on the request form</a>
                                                            </li>
                                                            <li><a href="#Edittheexamplecompletionworkflowsfornewrequests">Edit the example completion workflows for new requests</a>
                                                            </li>
                                                            <li><a href="#SetupdecommissioningworkflowsforChefnodes">Set up decommissioning workflows for Chef nodes</a>
                                                            </li>
                                                            <li><a href="#Whathappensnext">What happens next</a>
                                                            </li>
                                                            <li><a href="#ViewChefnodeconfigurationforaVM">View Chef node configuration for a VM</a>
                                                            </li>
                                                            <li><a href="#SynchronizewithChefandadjustthesynchronizationschedule">Synchronize with Chef and adjust the synchronization schedule</a>
                                                            </li>
                                                            <li><a href="#DisableorremoveChefservers">Disable or remove Chef servers</a>
                                                            </li>
                                                        </ul>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="scrollup" style="margin-bottom: 0px; margin-left: 17px;"><a id="scrollup" style="cursor: pointer;">Scroll</a>
                                    </p>
                                    <p>
                                        <!-- This referenced snippet allows an alt text statement to be included for the logo/go-home button on the top of each page -->
                                        <script>/*<![CDATA[*/$(document).ready(function(){
   $('a.logo').attr({
     alt: 'Snow Docs Home',
     title: 'Snow Docs Home'
   });
});/*]]>*/</script>
                                    </p>
                                    <script type="text/javascript">/*<![CDATA[*/if ($(".sticky-menu > ul").children("ul").length == 0){
        $(".sticky-menu > ul").css("visibility", "hidden");
    }/*]]>*/</script>
                                    <script defer="defer" src="../Resources/Scripts/scroll_to_top_left_nav.js" type="text/javascript">
                                    </script>
                                    <script type="text/javascript">/*<![CDATA[*/$("#home-link").prependTo("div.MCBreadcrumbsBox_SnowDocs_0");/*]]>*/</script>
                                    <script type="text/javascript" src="../Resources/Scripts/fa_ext_link.js">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>